// Generated by CoffeeScript 1.6.1
var AlertsTabLayout, AppMainLayout, AppPageContentView, AppPageFooterView, AppPageHeaderView, AppPageLayout, AppState, AppTestView, Controller, Daemon, DaemonView, Daemons, DaemonsView, HistoryTabLayout, HomeTabLayout, LoginPageContentView, LoginPageFooterView, LoginPageHeaderView, LoginPageLayout, MyApp, Tab, TabSelectorView, TabView, Tabs, UserTabLayout, WelcomePageContentView, WelcomePageFooterView, WelcomePageHeaderView, WelcomePageLayout, appState, controller, daemons, layouts, tabs, views,
  __hasProp = {}.hasOwnProperty;

AppState = Backbone.Model.extend({
  defaults: {
    user_id: "",
    user_name: "",
    state: "",
    current_state_layout: "",
    current_tab: "",
    server_address: ""
  },
  initialize: function() {
    this.listenTo(this, "change:current_state_layout", function() {
      return MyApp.mainRegion.show(this.get("current_state_layout"));
    });
    return this.listenTo(this, "change:current_tab", function() {
      return layouts.appMainLayout.tab.show(this.get("current_tab"));
    });
  }
});

WelcomePageLayout = Backbone.Marionette.Layout.extend({
  template: "#welcome-page-layout-template",
  regions: {
    header: "header",
    content: "#content",
    footer: "footer"
  },
  onRender: function() {
    this.header.show(views.welcomePageHeaderView);
    this.content.show(views.welcomePageContentView);
    return this.footer.show(views.welcomePageFooterView);
  }
});

LoginPageLayout = Backbone.Marionette.Layout.extend({
  template: "#login-page-layout-template",
  regions: {
    header: "header",
    content: "#content",
    footer: "footer"
  },
  onRender: function() {
    this.header.show(views.loginPageHeaderView);
    this.content.show(views.loginPageContentView);
    return this.footer.show(views.loginPageFooterView);
  }
});

AppPageLayout = Backbone.Marionette.Layout.extend({
  template: "#app-page-layout-template",
  regions: {
    header: "header",
    content: "#content",
    footer: "footer"
  },
  onRender: function() {
    this.header.show(views.appPageHeaderView);
    this.content.show(layouts.appMainLayout);
    return this.footer.show(views.appPageFooterView);
  }
});

WelcomePageHeaderView = Backbone.Marionette.ItemView.extend({
  template: "#welcome-page-header-template",
  className: ".welcome-pageheader"
});

WelcomePageContentView = Backbone.Marionette.ItemView.extend({
  template: "#welcome-page-content-template",
  className: ".welcome-page-content"
});

WelcomePageFooterView = Backbone.Marionette.ItemView.extend({
  template: "#welcome-page-footer-template",
  className: ".welcome-page-footer"
});

LoginPageHeaderView = Backbone.Marionette.ItemView.extend({
  template: "#login-page-header-template",
  className: ".login-page-header"
});

LoginPageContentView = Backbone.Marionette.ItemView.extend({
  template: "#login-page-content-template",
  className: ".login-page-content"
});

LoginPageFooterView = Backbone.Marionette.ItemView.extend({
  template: "#login-page-footer-template",
  className: ".login-page-footer"
});

AppPageHeaderView = Backbone.Marionette.ItemView.extend({
  template: "#app-page-header-template",
  className: ".app-page-header"
});

AppPageContentView = Backbone.Marionette.ItemView.extend({
  template: "#app-page-content-template",
  className: ".app-page-content"
});

AppPageFooterView = Backbone.Marionette.ItemView.extend({
  template: "#app-page-footer-template",
  className: ".app-page-footer"
});

AppMainLayout = Backbone.Marionette.Layout.extend({
  template: "#app-page-content-template",
  regions: {
    tabSelector: "#tab-selector",
    tab: "#tab"
  },
  initialize: function() {},
  onRender: function() {
    this.tabSelector.show(views.tabSelectorView);
    if (appState.get("current_tab") === "") {
      return appState.set("current_tab", tabs.models[0].get("tab"));
    } else {
      return appState.trigger("change:current_tab");
    }
  }
});

AppTestView = Backbone.Marionette.ItemView.extend({
  template: "#app-test-template",
  className: ".app-test"
});

HomeTabLayout = Backbone.Marionette.Layout.extend({
  template: "#home-tab-layout"
});

HistoryTabLayout = Backbone.Marionette.Layout.extend({
  template: "#history-tab-layout"
});

AlertsTabLayout = Backbone.Marionette.Layout.extend({
  template: "#alerts-tab-layout"
});

UserTabLayout = Backbone.Marionette.Layout.extend({
  template: "#user-tab-layout"
});

TabView = Backbone.Marionette.ItemView.extend({
  template: "#tab-template",
  className: "tabItem",
  tagName: "li",
  events: {
    'click': 'tabClicked'
  },
  tabClicked: function() {
    return appState.set("current_tab", this.model.get("tab"));
  }
});

TabSelectorView = Backbone.Marionette.CompositeView.extend({
  id: "tabs",
  template: "#tabs-template",
  itemView: TabView,
  appendHtml: function(collectionView, itemView) {
    return collectionView.$("#tabsList").append(itemView.el);
  }
});

Tab = Backbone.Model.extend({});

Tabs = Backbone.Collection.extend({
  model: Tab
});

Daemon = Backbone.Model.extend({
  defaults: {
    daemon_id: "",
    daemon_name: "",
    daemon_state: "",
    daemon_address: "",
    daemon_port: "",
    daemon_platform: "",
    daemon_all_parameters: "",
    daemon_monitored_parameters: ""
  },
  setDaemonProperties: function(properties) {
    var key, value, _results;
    _results = [];
    for (key in properties) {
      if (!__hasProp.call(properties, key)) continue;
      value = properties[key];
      if (key !== "daemon_id") {
        _results.push(this.set(key, value));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  },
  stop: function() {
    return sendControl(this.get("daemon_id"), "stop");
  },
  start: function() {
    return sendControl(this.get("daemon_id"), "start");
  },
  monitor: function(parameter) {
    var operation;
    operation = {
      "start": [parameter]
    };
    return sendControl(this.get("daemon_id"), operation);
  },
  unmonitor: function(parameter) {
    var operation;
    operation = {
      "stop": [parameter]
    };
    return sendControl(this.get("daemon_id"), operation);
  }
});

DaemonView = Backbone.Marionette.ItemView.extend({
  template: "#daemon-item-template",
  className: "daemonItem",
  tagName: "li"
});

Daemons = Backbone.Collection.extend({
  model: Daemon
});

DaemonsView = Backbone.Marionette.CompositeView.extend({
  id: "daemons",
  template: "#daemons-list-template",
  itemView: DaemonView,
  appendHtml: function(collectionView, itemView) {
    return collectionView.$("ul").append(itemView.el);
  }
});

Controller = Backbone.Router.extend({
  routes: {
    "": "welcome",
    "welcome": "welcome",
    "login": "login",
    "app": "app"
  },
  welcome: function() {
    return appState.set("current_state_layout", layouts.welcomePageLayout);
  },
  login: function() {
    return appState.set("current_state_layout", layouts.loginPageLayout);
  },
  app: function() {
    return appState.set("current_state_layout", layouts.appPageLayout);
  }
});

tabs = [];

daemons = new Daemons([
  {
    "daemon_id": "123",
    "daemon_name": "foo",
    "daemon_state": "RUNNING",
    "daemon_address": "123.123.123.123",
    "daemon_port": "666",
    "daemon_platform": {
      "OS": "Linux",
      "Architecture": "64 bit"
    },
    "daemon_all_parameters": ["CPU", "RAM", "HDD"],
    "daemon_monitored_parameters": ["CPU"]
  }, {
    "daemon_id": "234",
    "daemon_name": "bar",
    "daemon_state": "STOPPED",
    "daemon_address": "123.123.123.123",
    "daemon_port": "666",
    "daemon_platform": {
      "OS": "Linux",
      "Architecture": "64 bit"
    },
    "daemon_all_parameters": ["CPU", "RAM", "HDD"],
    "daemon_monitored_parameters": ["CPU"]
  }, {
    "daemon_id": "345",
    "daemon_name": "foobar",
    "daemon_state": "NOT_KNOWN",
    "daemon_address": "123.123.123.123",
    "daemon_port": "666",
    "daemon_platform": {
      "OS": "Linux",
      "Architecture": "64 bit"
    },
    "daemon_all_parameters": ["CPU", "RAM", "HDD"],
    "daemon_monitored_parameters": ["CPU"]
  }, {
    "daemon_id": "456",
    "daemon_name": "Bob",
    "daemon_state": "EATING A PIZZA",
    "daemon_address": "123.123.123.123",
    "daemon_port": "666",
    "daemon_platform": {
      "OS": "Linux",
      "Architecture": "64 bit"
    },
    "daemon_all_parameters": ["CPU", "RAM", "HDD"],
    "daemon_monitored_parameters": ["CPU"]
  }
]);

views = {};

layouts = {};

appState = new AppState();

controller = new Controller();

MyApp = new Backbone.Marionette.Application();

MyApp.addRegions({
  mainRegion: "#mainRegion"
});

MyApp.addInitializer(function(options) {
  tabs = new Tabs([
    {
      name: "Home",
      tab: new HomeTabLayout()
    }, {
      name: "History",
      tab: new HistoryTabLayout()
    }, {
      name: "Alerts",
      tab: new AlertsTabLayout()
    }, {
      name: "User",
      tab: new UserTabLayout()
    }
  ]);
  layouts = {
    welcomePageLayout: new WelcomePageLayout(),
    loginPageLayout: new LoginPageLayout(),
    appPageLayout: new AppPageLayout(),
    appMainLayout: new AppMainLayout()
  };
  return views = {
    tabSelectorView: new TabSelectorView({
      collection: tabs
    }),
    appPageHeaderView: new AppPageHeaderView(),
    appPageFooterView: new AppPageFooterView(),
    loginPageHeaderView: new LoginPageHeaderView(),
    loginPageContentView: new LoginPageContentView(),
    loginPageFooterView: new LoginPageFooterView(),
    welcomePageHeaderView: new WelcomePageHeaderView(),
    welcomePageContentView: new WelcomePageContentView(),
    welcomePageFooterView: new WelcomePageFooterView()
  };
});

MyApp.addInitializer(function(options) {
  return Backbone.history.start();
});

$(document).ready(function() {
  return MyApp.start();
});
